{"ast":null,"code":"import { USER_CREATE, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL } from \"../constants/userConstants\";\nimport * as api from \"../api/articles-api\";\nimport { axiosInstance } from \"../api/articles-api\";\nexport const createUser = user => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createUser(user);\n    dispatch({\n      type: USER_CREATE,\n      payload: data\n    });\n    console.log(\"hello\", data);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const loginUser = user => async dispatch => {\n  dispatch({\n    type: USER_LOGIN_REQUEST,\n    payload: user\n  });\n\n  try {\n    const {\n      data\n    } = await api.axiosInstance.post(\"/token/\", user).then(res => {\n      dispatch({\n        type: USER_LOGIN_REQUEST,\n        payload: data\n      });\n      localStorage.setItem(\"access_token\", res.data.access);\n      localStorage.setItem(\"refresh_token\", res.data.refresh);\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      axiosInstance.defaults.headers[\"Authorization\"] = \"JWT \" + localStorage.getItem(\"access_token\");\n      history.push(\"/\");\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/erik/Desktop/final/react-blog/src/actions/user-actions.js"],"names":["USER_CREATE","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","api","axiosInstance","createUser","user","dispatch","data","type","payload","console","log","error","loginUser","post","then","res","localStorage","setItem","access","refresh","JSON","stringify","defaults","headers","getItem","history","push","response","message"],"mappings":"AAAA,SACEA,WADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,eAJF,EAKEC,oBALF,EAMEC,iBANF,QAOO,4BAPP;AAQA,OAAO,KAAKC,GAAZ,MAAqB,qBAArB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACtD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACE,UAAJ,CAAeC,IAAf,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEZ,WADC;AAEPa,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAIAG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,IAArB;AACD,GAPD,CAOE,OAAOK,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,CAXM;AAaP,OAAO,MAAMC,SAAS,GAAIR,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACrDA,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEX,kBAAR;AAA4BY,IAAAA,OAAO,EAAEJ;AAArC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACC,aAAJ,CACpBW,IADoB,CACf,SADe,EACJT,IADI,EAEpBU,IAFoB,CAEdC,GAAD,IAAS;AACbV,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEX,kBADC;AAEPY,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAIAU,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,GAAG,CAACT,IAAJ,CAASY,MAA9C;AACAF,MAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCF,GAAG,CAACT,IAAJ,CAASa,OAA/C;AACAH,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCG,IAAI,CAACC,SAAL,CAAef,IAAf,CAAjC;AACAJ,MAAAA,aAAa,CAACoB,QAAd,CAAuBC,OAAvB,CAA+B,eAA/B,IACE,SAASP,YAAY,CAACQ,OAAb,CAAqB,cAArB,CADX;AAEAC,MAAAA,OAAO,CAACC,IAAR,CAAa,GAAb;AACD,KAboB,CAAvB;AAcD,GAfD,CAeE,OAAOf,KAAP,EAAc;AACdN,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAET,eADC;AAEPU,MAAAA,OAAO,EACLG,KAAK,CAACgB,QAAN,IAAkBhB,KAAK,CAACgB,QAAN,CAAerB,IAAf,CAAoBsB,OAAtC,GACIjB,KAAK,CAACgB,QAAN,CAAerB,IAAf,CAAoBsB,OADxB,GAEIjB,KAAK,CAACiB;AALL,KAAD,CAAR;AAOD;AACF,CA1BM","sourcesContent":["import {\n  USER_CREATE,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n} from \"../constants/userConstants\";\nimport * as api from \"../api/articles-api\";\nimport { axiosInstance } from \"../api/articles-api\";\n\nexport const createUser = (user) => async (dispatch) => {\n  try {\n    const { data } = await api.createUser(user);\n    dispatch({\n      type: USER_CREATE,\n      payload: data,\n    });\n    console.log(\"hello\", data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const loginUser = (user) => async (dispatch) => {\n  dispatch({ type: USER_LOGIN_REQUEST, payload: user });\n  try {\n    const { data } = await api.axiosInstance\n      .post(\"/token/\", user)\n      .then((res) => {\n        dispatch({\n          type: USER_LOGIN_REQUEST,\n          payload: data,\n        });\n        localStorage.setItem(\"access_token\", res.data.access);\n        localStorage.setItem(\"refresh_token\", res.data.refresh);\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n        axiosInstance.defaults.headers[\"Authorization\"] =\n          \"JWT \" + localStorage.getItem(\"access_token\");\n        history.push(\"/\");\n      });\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}