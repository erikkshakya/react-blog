{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"http://localhost:8000/api\";\nexport const fetchArticles = () => axios.get(`${baseUrl}/maintitle`);\nexport const fetchArticlesDetails = slug => axios.get(`${baseUrl}/maintitle/${slug}`);\nexport const createArticle = data => axios.post(`${baseUrl}/maintitle/`, data, {\n  headers: {\n    \"Content-Type\": \"multipart/form-data\"\n  }\n}).then(function () {\n  console.log(\"SUCCESS!!\");\n}).catch(function () {\n  console.log(\"FAILURE!!\");\n}); // ########SUBS##########\n\nexport const fetchSubArticlesDetails = slug => axios.get(`${baseUrl}/subtitle/${slug}`);\nexport const fetchSubarticles = () => axios.get(`${baseUrl}/subtitle`);\nexport const createSubArticle = data => axios.post(`${baseUrl}/subtitle/`, data, {\n  headers: {\n    \"Content-Type\": \"multipart/form-data\"\n  }\n}).then(function () {\n  console.log(\"SUCCESS!!\");\n}).catch(function () {\n  console.log(\"FAILURE!!\");\n}); // export const fetchUser = () => axios.get(`${baseUrl}/maintitle`);\n// export const fetchUserDetails = (slug) =>\n//   axios.get(`${baseUrl}/maintitle/${slug}`);\n\nexport const createUser = response => axios.post(`${baseUrl}/register`, response, {\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n}); // export const loginUser = (response) =>\n//   axios.post(`${baseUrl}/login`, response, {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   });\n\nexport const axiosInstance = axios.create({\n  baseURL: baseUrl,\n  timeout: 5000,\n  headers: {\n    Authorization: localStorage.getItem(\"access_token\") ? \"JWT \" + localStorage.getItem(\"access_token\") : null,\n    \"Content-Type\": \"application/json\",\n    accept: \"application/json\"\n  }\n});\naxiosInstance.interceptors.response.use(response => {\n  return response;\n}, async function (error) {\n  const originalRequest = error.config;\n\n  if (typeof error.response === \"undefined\") {\n    alert(\"A server/network error occurred. \" + \"Looks like CORS might be the problem. \" + \"Sorry about this - we will get it fixed shortly.\");\n    return Promise.reject(error);\n  }\n\n  if (error.response.status === 401 && originalRequest.url === baseUrl + \"/token/refresh/\") {\n    window.location.href = \"/login/\";\n    return Promise.reject(error);\n  }\n\n  if (error.response.data.code === \"token_not_valid\" && error.response.status === 401 && error.response.statusText === \"Unauthorized\") {\n    const refreshToken = localStorage.getItem(\"refresh_token\");\n\n    if (refreshToken) {\n      const tokenParts = JSON.parse(atob(refreshToken.split(\".\")[1])); // exp date in token is expressed in seconds, while now() returns milliseconds:\n\n      const now = Math.ceil(Date.now() / 1000);\n      console.log(tokenParts.exp);\n\n      if (tokenParts.exp > now) {\n        return axiosInstance.post(\"/token/refresh\", {\n          refresh: refreshToken\n        }).then(response => {\n          localStorage.setItem(\"access_token\", response.data.access);\n          localStorage.setItem(\"refresh_token\", response.data.refresh);\n          axiosInstance.defaults.headers[\"Authorization\"] = \"JWT \" + response.data.access;\n          originalRequest.headers[\"Authorization\"] = \"JWT \" + response.data.access;\n          return axiosInstance(originalRequest);\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        console.log(\"Refresh token is expired\", tokenParts.exp, now);\n        window.location.href = \"/user/login\";\n      }\n    } else {\n      console.log(\"Refresh token not available.\");\n      window.location.href = \"/user/login\";\n    }\n  } // specific error handling done elsewhere\n\n\n  return Promise.reject(error);\n});","map":{"version":3,"sources":["/home/erik/Desktop/final/react-blog/src/api/articles-api.js"],"names":["axios","baseUrl","fetchArticles","get","fetchArticlesDetails","slug","createArticle","data","post","headers","then","console","log","catch","fetchSubArticlesDetails","fetchSubarticles","createSubArticle","createUser","response","axiosInstance","create","baseURL","timeout","Authorization","localStorage","getItem","accept","interceptors","use","error","originalRequest","config","alert","Promise","reject","status","url","window","location","href","code","statusText","refreshToken","tokenParts","JSON","parse","atob","split","now","Math","ceil","Date","exp","refresh","setItem","access","defaults","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,2BAAhB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAW,GAAEF,OAAQ,YAArB,CAA5B;AACP,OAAO,MAAMG,oBAAoB,GAAIC,IAAD,IAClCL,KAAK,CAACG,GAAN,CAAW,GAAEF,OAAQ,cAAaI,IAAK,EAAvC,CADK;AAEP,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAC3BP,KAAK,CACFQ,IADH,CACS,GAAEP,OAAQ,aADnB,EACiCM,IADjC,EACuC;AACnCE,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAD0B,CADvC,EAMGC,IANH,CAMQ,YAAY;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,CARH,EASGC,KATH,CASS,YAAY;AACjBF,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,CAXH,CADK,C,CAcP;;AACA,OAAO,MAAME,uBAAuB,GAAIT,IAAD,IACrCL,KAAK,CAACG,GAAN,CAAW,GAAEF,OAAQ,aAAYI,IAAK,EAAtC,CADK;AAEP,OAAO,MAAMU,gBAAgB,GAAG,MAAMf,KAAK,CAACG,GAAN,CAAW,GAAEF,OAAQ,WAArB,CAA/B;AACP,OAAO,MAAMe,gBAAgB,GAAIT,IAAD,IAC9BP,KAAK,CACFQ,IADH,CACS,GAAEP,OAAQ,YADnB,EACgCM,IADhC,EACsC;AAClCE,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AADyB,CADtC,EAMGC,IANH,CAMQ,YAAY;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,CARH,EASGC,KATH,CASS,YAAY;AACjBF,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,CAXH,CADK,C,CAcP;AACA;AACA;;AACA,OAAO,MAAMK,UAAU,GAAIC,QAAD,IACxBlB,KAAK,CAACQ,IAAN,CAAY,GAAEP,OAAQ,WAAtB,EAAkCiB,QAAlC,EAA4C;AAC1CT,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AADiC,CAA5C,CADK,C,CAMP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMU,aAAa,GAAGnB,KAAK,CAACoB,MAAN,CAAa;AACxCC,EAAAA,OAAO,EAAEpB,OAD+B;AAExCqB,EAAAA,OAAO,EAAE,IAF+B;AAGxCb,EAAAA,OAAO,EAAE;AACPc,IAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,cAArB,IACX,SAASD,YAAY,CAACC,OAAb,CAAqB,cAArB,CADE,GAEX,IAHG;AAIP,oBAAgB,kBAJT;AAKPC,IAAAA,MAAM,EAAE;AALD;AAH+B,CAAb,CAAtB;AAYPP,aAAa,CAACQ,YAAd,CAA2BT,QAA3B,CAAoCU,GAApC,CACGV,QAAD,IAAc;AACZ,SAAOA,QAAP;AACD,CAHH,EAIE,gBAAgBW,KAAhB,EAAuB;AACrB,QAAMC,eAAe,GAAGD,KAAK,CAACE,MAA9B;;AAEA,MAAI,OAAOF,KAAK,CAACX,QAAb,KAA0B,WAA9B,EAA2C;AACzCc,IAAAA,KAAK,CACH,sCACE,wCADF,GAEE,kDAHC,CAAL;AAKA,WAAOC,OAAO,CAACC,MAAR,CAAeL,KAAf,CAAP;AACD;;AAED,MACEA,KAAK,CAACX,QAAN,CAAeiB,MAAf,KAA0B,GAA1B,IACAL,eAAe,CAACM,GAAhB,KAAwBnC,OAAO,GAAG,iBAFpC,EAGE;AACAoC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACA,WAAON,OAAO,CAACC,MAAR,CAAeL,KAAf,CAAP;AACD;;AAED,MACEA,KAAK,CAACX,QAAN,CAAeX,IAAf,CAAoBiC,IAApB,KAA6B,iBAA7B,IACAX,KAAK,CAACX,QAAN,CAAeiB,MAAf,KAA0B,GAD1B,IAEAN,KAAK,CAACX,QAAN,CAAeuB,UAAf,KAA8B,cAHhC,EAIE;AACA,UAAMC,YAAY,GAAGlB,YAAY,CAACC,OAAb,CAAqB,eAArB,CAArB;;AAEA,QAAIiB,YAAJ,EAAkB;AAChB,YAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACJ,YAAY,CAACK,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAD,CAAf,CAAnB,CADgB,CAGhB;;AACA,YAAMC,GAAG,GAAGC,IAAI,CAACC,IAAL,CAAUC,IAAI,CAACH,GAAL,KAAa,IAAvB,CAAZ;AACArC,MAAAA,OAAO,CAACC,GAAR,CAAY+B,UAAU,CAACS,GAAvB;;AAEA,UAAIT,UAAU,CAACS,GAAX,GAAiBJ,GAArB,EAA0B;AACxB,eAAO7B,aAAa,CACjBX,IADI,CACC,gBADD,EACmB;AAAE6C,UAAAA,OAAO,EAAEX;AAAX,SADnB,EAEJhC,IAFI,CAEEQ,QAAD,IAAc;AAClBM,UAAAA,YAAY,CAAC8B,OAAb,CAAqB,cAArB,EAAqCpC,QAAQ,CAACX,IAAT,CAAcgD,MAAnD;AACA/B,UAAAA,YAAY,CAAC8B,OAAb,CAAqB,eAArB,EAAsCpC,QAAQ,CAACX,IAAT,CAAc8C,OAApD;AAEAlC,UAAAA,aAAa,CAACqC,QAAd,CAAuB/C,OAAvB,CAA+B,eAA/B,IACE,SAASS,QAAQ,CAACX,IAAT,CAAcgD,MADzB;AAEAzB,UAAAA,eAAe,CAACrB,OAAhB,CAAwB,eAAxB,IACE,SAASS,QAAQ,CAACX,IAAT,CAAcgD,MADzB;AAGA,iBAAOpC,aAAa,CAACW,eAAD,CAApB;AACD,SAZI,EAaJjB,KAbI,CAaG4C,GAAD,IAAS;AACd9C,UAAAA,OAAO,CAACC,GAAR,CAAY6C,GAAZ;AACD,SAfI,CAAP;AAgBD,OAjBD,MAiBO;AACL9C,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC+B,UAAU,CAACS,GAAnD,EAAwDJ,GAAxD;AACAX,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,aAAvB;AACD;AACF,KA5BD,MA4BO;AACL5B,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAyB,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,aAAvB;AACD;AACF,GA3DoB,CA6DrB;;;AACA,SAAON,OAAO,CAACC,MAAR,CAAeL,KAAf,CAAP;AACD,CAnEH","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"http://localhost:8000/api\";\n\nexport const fetchArticles = () => axios.get(`${baseUrl}/maintitle`);\nexport const fetchArticlesDetails = (slug) =>\n  axios.get(`${baseUrl}/maintitle/${slug}`);\nexport const createArticle = (data) =>\n  axios\n    .post(`${baseUrl}/maintitle/`, data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    })\n    .then(function () {\n      console.log(\"SUCCESS!!\");\n    })\n    .catch(function () {\n      console.log(\"FAILURE!!\");\n    });\n\n// ########SUBS##########\nexport const fetchSubArticlesDetails = (slug) =>\n  axios.get(`${baseUrl}/subtitle/${slug}`);\nexport const fetchSubarticles = () => axios.get(`${baseUrl}/subtitle`);\nexport const createSubArticle = (data) =>\n  axios\n    .post(`${baseUrl}/subtitle/`, data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    })\n    .then(function () {\n      console.log(\"SUCCESS!!\");\n    })\n    .catch(function () {\n      console.log(\"FAILURE!!\");\n    });\n\n// export const fetchUser = () => axios.get(`${baseUrl}/maintitle`);\n// export const fetchUserDetails = (slug) =>\n//   axios.get(`${baseUrl}/maintitle/${slug}`);\nexport const createUser = (response) =>\n  axios.post(`${baseUrl}/register`, response, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n// export const loginUser = (response) =>\n//   axios.post(`${baseUrl}/login`, response, {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   });\nexport const axiosInstance = axios.create({\n  baseURL: baseUrl,\n  timeout: 5000,\n  headers: {\n    Authorization: localStorage.getItem(\"access_token\")\n      ? \"JWT \" + localStorage.getItem(\"access_token\")\n      : null,\n    \"Content-Type\": \"application/json\",\n    accept: \"application/json\",\n  },\n});\n\naxiosInstance.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async function (error) {\n    const originalRequest = error.config;\n\n    if (typeof error.response === \"undefined\") {\n      alert(\n        \"A server/network error occurred. \" +\n          \"Looks like CORS might be the problem. \" +\n          \"Sorry about this - we will get it fixed shortly.\"\n      );\n      return Promise.reject(error);\n    }\n\n    if (\n      error.response.status === 401 &&\n      originalRequest.url === baseUrl + \"/token/refresh/\"\n    ) {\n      window.location.href = \"/login/\";\n      return Promise.reject(error);\n    }\n\n    if (\n      error.response.data.code === \"token_not_valid\" &&\n      error.response.status === 401 &&\n      error.response.statusText === \"Unauthorized\"\n    ) {\n      const refreshToken = localStorage.getItem(\"refresh_token\");\n\n      if (refreshToken) {\n        const tokenParts = JSON.parse(atob(refreshToken.split(\".\")[1]));\n\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\n        const now = Math.ceil(Date.now() / 1000);\n        console.log(tokenParts.exp);\n\n        if (tokenParts.exp > now) {\n          return axiosInstance\n            .post(\"/token/refresh\", { refresh: refreshToken })\n            .then((response) => {\n              localStorage.setItem(\"access_token\", response.data.access);\n              localStorage.setItem(\"refresh_token\", response.data.refresh);\n\n              axiosInstance.defaults.headers[\"Authorization\"] =\n                \"JWT \" + response.data.access;\n              originalRequest.headers[\"Authorization\"] =\n                \"JWT \" + response.data.access;\n\n              return axiosInstance(originalRequest);\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n        } else {\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\n          window.location.href = \"/user/login\";\n        }\n      } else {\n        console.log(\"Refresh token not available.\");\n        window.location.href = \"/user/login\";\n      }\n    }\n\n    // specific error handling done elsewhere\n    return Promise.reject(error);\n  }\n);\n"]},"metadata":{},"sourceType":"module"}