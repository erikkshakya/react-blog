{"ast":null,"code":"var _jsxFileName = \"/home/erik/Desktop/final/react-blog/src/screens/subarticleEdit-screen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { createSubArticle, listSubArticles, listSubArticlesDetails } from \"../actions/subarticles-actions\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { listArticles } from \"../actions/articles-action\";\nimport FormData from \"form-data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubArticleEdit = () => {\n  _s();\n\n  let history = useHistory();\n  const {\n    slug\n  } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listArticles());\n    dispatch(listSubArticlesDetails(slug));\n  }, [dispatch]);\n  const {\n    articles\n  } = useSelector(state => state === null || state === void 0 ? void 0 : state.articlesList);\n  const {\n    subarticleList\n  } = useSelector(state => state === null || state === void 0 ? void 0 : state.subarticlesDetails);\n  console.log(subarticleList);\n  const [product, setProduct] = useState({\n    title: \"\",\n    description: \"\",\n    image: \"\",\n    available_on: \"\",\n    maintitle: []\n  });\n\n  if (subarticle) {\n    setProduct(subarticle);\n  } // const [title, setTitle] = useState(\"\");\n  // const [description, setDescription] = useState(\"\");\n  // const [image, setImage] = useState(\"\");\n  // const [available_on, setAvailable_on] = useState(\"\");\n  // const [maintitle, setMainTitle] = useState({\n  //   maintitle: [],\n  // });\n  // const selectHandler = (e) => {\n  //   const selected = [];\n  //   let selectedOption = e.target.selectedOptions;\n  //   for (let i = 0; i < selectedOption.length; i++) {\n  //     selected.push(selectedOption[i].value);\n  //   }\n  //   console.log(\"aaaaaaaaaaaaaaaa\", selected);\n  //   const final = selected.map(Number);\n  //   setMainTitle({ ...maintitle, [e.target.name]: selected });\n  //   console.log(\"!!!!!!!!!!\", selected);\n  // };\n  // const selectHandler = (e) => {\n  //   const selected = [];\n  //   let selectedOption = e.target.selectedOptions;\n  //   for (let i = 0; i < selectedOption.length; i++) {\n  //     selected.push(selectedOption[i].value);\n  //   }\n  //   console.log(\"aaaaaaaaaaaaaaaa\", selected);\n  //   const final = selected.map(Number);\n  //   setMainTitle({ ...maintitle, [e.target.name]: selected });\n  //   console.log(\"!!!!!!!!!!\", selected);\n  // };\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"#######\");\n    let formData = new FormData();\n    console.log(\"#############\"); // formData.append(\"title\", title);\n    // formData.append(\"image\", image);\n    // formData.append(\"description\", description);\n    // formData.append(\"available_on\", available_on);\n    // formData.append(\"maintitle\", maintitle.maintitle);\n\n    dispatch(createSubArticle(formData));\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"helloo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this) // <Form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n  //   <Form.Group controlId=\"exampleForm.ControlInput1\">\n  //     <Form.Label>Title</Form.Label>\n  //     <Form.Control\n  //       type=\"text\"\n  //       placeholder=\"The Wolf WatchMan\"\n  //       value={title}\n  //       onChange={(e) => setTitle(e.target.value)}\n  //     />\n  //   </Form.Group>\n  //   <Form.Group>\n  //     <Form.File\n  //       id=\"exampleFormControlFile1\"\n  //       label=\"Upload Image\"\n  //       onChange={(e) => setImage(e.target.files[0])}\n  //     />\n  //   </Form.Group>\n  //   <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n  //     <Form.Label>Description</Form.Label>\n  //     <Form.Control\n  //       as=\"textarea\"\n  //       rows={3}\n  //       value={description}\n  //       onChange={(e) => setDescription(e.target.value)}\n  //     />\n  //   </Form.Group>\n  //   <select\n  //     class=\"selectpicker\"\n  //     name=\"maintitle\"\n  //     data-live-search=\"true\"\n  //     onChange={selectHandler}\n  //   >\n  //     {articleList.map((art) => (\n  //       <option value={art.id}>{art.title}</option>\n  //     ))}\n  //   </select>\n  //   <Form.Group controlId=\"exampleForm.ControlInput1\">\n  //     <Form.Label>Avaliable On</Form.Label>\n  //     <Form.Control\n  //       type=\"text\"\n  //       placeholder=\"Bonish Store\"\n  //       value={available_on}\n  //       onChange={(e) => setAvailable_on(e.target.value)}\n  //     />\n  //   </Form.Group>\n  //   <Form.Group>\n  //     <Button variant=\"outline-dark\" type=\"submit\">\n  //       Submit\n  //     </Button>\n  //   </Form.Group>\n  // </Form>\n  ;\n};\n\n_s(SubArticleEdit, \"fIhJJb4lznAcXwJAg1cybLtj80Q=\", false, function () {\n  return [useHistory, useParams, useDispatch, useSelector, useSelector];\n});\n\n_c = SubArticleEdit;\nexport default SubArticleEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubArticleEdit\");","map":{"version":3,"sources":["/home/erik/Desktop/final/react-blog/src/screens/subarticleEdit-screen.js"],"names":["React","useState","useEffect","useHistory","useParams","useDispatch","createSubArticle","listSubArticles","listSubArticlesDetails","Form","Button","useSelector","listArticles","FormData","SubArticleEdit","history","slug","dispatch","articles","state","articlesList","subarticleList","subarticlesDetails","console","log","product","setProduct","title","description","image","available_on","maintitle","subarticle","handleSubmit","e","preventDefault","formData","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SACEC,gBADF,EAEEC,eAFF,EAGEC,sBAHF,QAIO,gCAJP;AAKA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,MAAIC,OAAO,GAAGZ,UAAU,EAAxB;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAWZ,SAAS,EAA1B;AACA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACL,YAAY,EAAb,CAAR;AACAK,IAAAA,QAAQ,CAACT,sBAAsB,CAACQ,IAAD,CAAvB,CAAR;AACD,GAHQ,EAGN,CAACC,QAAD,CAHM,CAAT;AAIA,QAAM;AAAEC,IAAAA;AAAF,MAAcP,WAAW,CAC5BQ,KAAD,IAAWA,KAAX,aAAWA,KAAX,uBAAWA,KAAK,CAAEC,YADW,CAA/B;AAGA,QAAM;AAACC,IAAAA;AAAD,MAAmBV,WAAW,CAACQ,KAAK,IAAGA,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEG,kBAAhB,CAApC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,CAAC;AACrC0B,IAAAA,KAAK,EAAE,EAD8B;AAErCC,IAAAA,WAAW,EAAE,EAFwB;AAGrCC,IAAAA,KAAK,EAAE,EAH8B;AAIrCC,IAAAA,YAAY,EAAE,EAJuB;AAKrCC,IAAAA,SAAS,EAAE;AAL0B,GAAD,CAAtC;;AAOA,MAAGC,UAAH,EAAc;AACZN,IAAAA,UAAU,CAACM,UAAD,CAAV;AACD,GAtB0B,CAuB3B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,QAAIY,QAAQ,GAAG,IAAIvB,QAAJ,EAAf;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAJ0B,CAK1B;AACA;AACA;AACA;AACA;;AACAP,IAAAA,QAAQ,CAACX,gBAAgB,CAAC8B,QAAD,CAAjB,CAAR;AACArB,IAAAA,OAAO,CAACsB,IAAR,CAAa,GAAb;AACD,GAZD;;AAaA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtDF;AAwDD,CAhID;;GAAMvB,c;UACUX,U,EACGC,S,EACAC,W,EAKGM,W,EAGKA,W;;;KAXrBG,c;AAkIN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  createSubArticle,\n  listSubArticles,\n  listSubArticlesDetails,\n} from \"../actions/subarticles-actions\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { listArticles } from \"../actions/articles-action\";\nimport FormData from \"form-data\";\n\nconst SubArticleEdit = () => {\n  let history = useHistory();\n  const { slug } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listArticles());\n    dispatch(listSubArticlesDetails(slug));\n  }, [dispatch]);\n  const { articles} = useSelector(\n    (state) => state?.articlesList\n  );\n  const {subarticleList} = useSelector(state=> state?.subarticlesDetails)\n  console.log(subarticleList);\n  const [product, setProduct] = useState({\n    title: \"\",\n    description: \"\",\n    image: \"\",\n    available_on: \"\",\n    maintitle: [],\n  });\n  if(subarticle){\n    setProduct(subarticle)\n  }\n  // const [title, setTitle] = useState(\"\");\n  // const [description, setDescription] = useState(\"\");\n  // const [image, setImage] = useState(\"\");\n  // const [available_on, setAvailable_on] = useState(\"\");\n  // const [maintitle, setMainTitle] = useState({\n  //   maintitle: [],\n  // });\n\n  // const selectHandler = (e) => {\n  //   const selected = [];\n  //   let selectedOption = e.target.selectedOptions;\n\n  //   for (let i = 0; i < selectedOption.length; i++) {\n  //     selected.push(selectedOption[i].value);\n  //   }\n  //   console.log(\"aaaaaaaaaaaaaaaa\", selected);\n  //   const final = selected.map(Number);\n\n  //   setMainTitle({ ...maintitle, [e.target.name]: selected });\n  //   console.log(\"!!!!!!!!!!\", selected);\n  // };\n\n  // const selectHandler = (e) => {\n  //   const selected = [];\n  //   let selectedOption = e.target.selectedOptions;\n\n  //   for (let i = 0; i < selectedOption.length; i++) {\n  //     selected.push(selectedOption[i].value);\n  //   }\n  //   console.log(\"aaaaaaaaaaaaaaaa\", selected);\n  //   const final = selected.map(Number);\n\n  //   setMainTitle({ ...maintitle, [e.target.name]: selected });\n  //   console.log(\"!!!!!!!!!!\", selected);\n  // };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"#######\");\n    let formData = new FormData();\n    console.log(\"#############\");\n    // formData.append(\"title\", title);\n    // formData.append(\"image\", image);\n    // formData.append(\"description\", description);\n    // formData.append(\"available_on\", available_on);\n    // formData.append(\"maintitle\", maintitle.maintitle);\n    dispatch(createSubArticle(formData));\n    history.push(\"/\");\n  };\n  return (\n    <div>helloo</div>\n    // <Form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n    //   <Form.Group controlId=\"exampleForm.ControlInput1\">\n    //     <Form.Label>Title</Form.Label>\n    //     <Form.Control\n    //       type=\"text\"\n    //       placeholder=\"The Wolf WatchMan\"\n    //       value={title}\n    //       onChange={(e) => setTitle(e.target.value)}\n    //     />\n    //   </Form.Group>\n    //   <Form.Group>\n    //     <Form.File\n    //       id=\"exampleFormControlFile1\"\n    //       label=\"Upload Image\"\n    //       onChange={(e) => setImage(e.target.files[0])}\n    //     />\n    //   </Form.Group>\n    //   <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n    //     <Form.Label>Description</Form.Label>\n    //     <Form.Control\n    //       as=\"textarea\"\n    //       rows={3}\n    //       value={description}\n    //       onChange={(e) => setDescription(e.target.value)}\n    //     />\n    //   </Form.Group>\n\n    //   <select\n    //     class=\"selectpicker\"\n    //     name=\"maintitle\"\n    //     data-live-search=\"true\"\n    //     onChange={selectHandler}\n    //   >\n    //     {articleList.map((art) => (\n    //       <option value={art.id}>{art.title}</option>\n    //     ))}\n    //   </select>\n\n    //   <Form.Group controlId=\"exampleForm.ControlInput1\">\n    //     <Form.Label>Avaliable On</Form.Label>\n    //     <Form.Control\n    //       type=\"text\"\n    //       placeholder=\"Bonish Store\"\n    //       value={available_on}\n    //       onChange={(e) => setAvailable_on(e.target.value)}\n    //     />\n    //   </Form.Group>\n    //   <Form.Group>\n    //     <Button variant=\"outline-dark\" type=\"submit\">\n    //       Submit\n    //     </Button>\n    //   </Form.Group>\n    // </Form>\n  );\n};\n\nexport default SubArticleEdit;\n"]},"metadata":{},"sourceType":"module"}