{"ast":null,"code":"import { USER_CREATE, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL } from \"../constants/userConstants\";\nimport * as api from \"../api/articles-api\";\nexport const createUser = user => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createUser(user);\n    dispatch({\n      type: USER_CREATE,\n      payload: data\n    });\n    console.log(\"hello\", data);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const loginUser = user => async dispatch => {\n  dispatch({\n    type: USER_LOGIN_REQUEST,\n    payload: user\n  });\n\n  try {\n    const {\n      data\n    } = await api.axiosInstance.post(\"/token/\", user);\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n      payload: data\n    });\n    localStorage.setItem(\"access_token\", res.data.access);\n    localStorage.setItem(\"refresh_token\", res.data.refresh);\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    \"JWT \" + localStorage.getItem(\"access_token\");\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n    history.push(\"/\");\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/erik/Desktop/final/react-blog/src/actions/user-actions.js"],"names":["USER_CREATE","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","api","createUser","user","dispatch","data","type","payload","console","log","error","loginUser","axiosInstance","post","localStorage","setItem","res","access","refresh","JSON","stringify","getItem","response","message","history","push"],"mappings":"AAAA,SACEA,WADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,eAJF,EAKEC,oBALF,EAMEC,iBANF,QAOO,4BAPP;AAQA,OAAO,KAAKC,GAAZ,MAAqB,qBAArB;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACtD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,GAAG,CAACC,UAAJ,CAAeC,IAAf,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEX,WADC;AAEPY,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAIAG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,IAArB;AACD,GAPD,CAOE,OAAOK,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,CAXM;AAaP,OAAO,MAAMC,SAAS,GAAIR,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACrDA,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEV,kBAAR;AAA4BW,IAAAA,OAAO,EAAEJ;AAArC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAMJ,GAAG,CAACW,aAAJ,CAAkBC,IAAlB,CAAuB,SAAvB,EAAkCV,IAAlC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEV,kBADC;AAEPW,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAIAS,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,GAAG,CAACX,IAAJ,CAASY,MAA9C;AACAH,IAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,GAAG,CAACX,IAAJ,CAASa,OAA/C;AACAJ,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCI,IAAI,CAACC,SAAL,CAAef,IAAf,CAAjC;AACA,aAASS,YAAY,CAACO,OAAb,CAAqB,cAArB,CAAT;AACAjB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAET,kBADC;AAEPU,MAAAA,OAAO,EACLG,KAAK,CAACY,QAAN,IAAkBZ,KAAK,CAACY,QAAN,CAAejB,IAAf,CAAoBkB,OAAtC,GACIb,KAAK,CAACY,QAAN,CAAejB,IAAf,CAAoBkB,OADxB,GAEIb,KAAK,CAACa;AALL,KAAD,CAAR;AAOAC,IAAAA,OAAO,CAACC,IAAR,CAAa,GAAb;AACD,GAlBD,CAkBE,OAAOf,KAAP,EAAc;AACdN,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,eADC;AAEPS,MAAAA,OAAO,EACLG,KAAK,CAACY,QAAN,IAAkBZ,KAAK,CAACY,QAAN,CAAejB,IAAf,CAAoBkB,OAAtC,GACIb,KAAK,CAACY,QAAN,CAAejB,IAAf,CAAoBkB,OADxB,GAEIb,KAAK,CAACa;AALL,KAAD,CAAR;AAOD;AACF,CA7BM","sourcesContent":["import {\n  USER_CREATE,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n} from \"../constants/userConstants\";\nimport * as api from \"../api/articles-api\";\n\nexport const createUser = (user) => async (dispatch) => {\n  try {\n    const { data } = await api.createUser(user);\n    dispatch({\n      type: USER_CREATE,\n      payload: data,\n    });\n    console.log(\"hello\", data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const loginUser = (user) => async (dispatch) => {\n  dispatch({ type: USER_LOGIN_REQUEST, payload: user });\n  try {\n    const { data } = await api.axiosInstance.post(\"/token/\", user);\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n      payload: data,\n    });\n    localStorage.setItem(\"access_token\", res.data.access);\n    localStorage.setItem(\"refresh_token\", res.data.refresh);\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    \"JWT \" + localStorage.getItem(\"access_token\");\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n    history.push(\"/\");\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}