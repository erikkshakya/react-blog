{"ast":null,"code":"var _jsxFileName = \"/home/erik/Desktop/final/react-blog/src/screens/subarticleEdit-screen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { createSubArticle, listSubArticles, listSubArticlesDetails } from \"../actions/subarticles-actions\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { listArticles } from \"../actions/articles-action\";\nimport FormData from \"form-data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubArticleEdit = () => {\n  _s();\n\n  let history = useHistory();\n  const {\n    slug\n  } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listArticles());\n    dispatch(listSubArticlesDetails(slug));\n  }, [dispatch]);\n  const {\n    articles\n  } = useSelector(state => state === null || state === void 0 ? void 0 : state.articlesList); // if (slug) {\n  //   const { subarticle, loading } = useSelector(\n  //     (state) => state.subarticlesDetails\n  //   );\n  // }\n\n  const [product, setProduct] = useState({\n    title: \"\",\n    description: \"\",\n    image: \"\",\n    available_on: \"\",\n    maintitle: []\n  });\n  const {\n    title,\n    description,\n    image,\n    available_on,\n    maintitle\n  } = product; // useEffect(() => {\n  //   if (subarticle) {\n  //     setProduct(subarticle);\n  //   }\n  // }, [subarticle]);\n  // const [title, setTitle] = useState(\"\");\n  // const [description, setDescription] = useState(\"\");\n  // const [image, setImage] = useState(\"\");\n  // const [available_on, setAvailable_on] = useState(\"\");\n  // const [maintitle, setMainTitle] = useState({\n  //   maintitle: [],\n  // });\n  // const selectHandler = (e) => {\n  //   const selected = [];\n  //   let selectedOption = e.target.selectedOptions;\n  //   for (let i = 0; i < selectedOption.length; i++) {\n  //     selected.push(selectedOption[i].value);\n  //   }\n  //   console.log(\"aaaaaaaaaaaaaaaa\", selected);\n  //   const final = selected.map(Number);\n  //   setMainTitle({ ...maintitle, [e.target.name]: selected });\n  //   console.log(\"!!!!!!!!!!\", selected);\n  // };\n\n  const selectHandler = e => {\n    const selected = [];\n    let selectedOption = e.target.selectedOptions;\n\n    for (let i = 0; i < selectedOption.length; i++) {\n      selected.push(selectedOption[i].value);\n    }\n\n    console.log(\"aaaaaaaaaaaaaaaa\", selected);\n    const final = selected.map(Number);\n    setProduct({ ...maintitle,\n      [e.target.name]: selected\n    });\n    console.log(\"!!!!!!!!!!\", selected);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"#######\");\n    let formData = new FormData();\n    console.log(\"#############\");\n    formData.append(\"title\", title);\n    formData.append(\"image\", image);\n    formData.append(\"description\", description);\n    formData.append(\"available_on\", available_on);\n    formData.append(\"maintitle\", maintitle.maintitle);\n\n    for (let pair of formData.entries()) {\n      console.log(pair[0] + \", \" + pair[1]);\n    } // if (slug) {\n    //   dispatch(updateArticles(slug, formData));\n    // } else {\n    //   dispatch(createArticle(formData));\n    // }\n\n\n    dispatch(createSubArticle(formData));\n    history.push(\"/\");\n  };\n\n  return (\n    /*#__PURE__*/\n    // <>\n    //   <div className=\"card border-0 shadow\">\n    //     <div className=\"card-header\">Add Contact</div>\n    //     <div className=\"card-body\">\n    //       <form encType=\"multipart/form-data\" onSubmit={(e) => handleSubmit(e)}>\n    //         <div className=\"form-group\">\n    //           <input\n    //             type=\"text\"\n    //             className=\"form-control\"\n    //             value={title}\n    //             onChange={(e) =>\n    //               setProduct({ ...product, title: e.target.value })\n    //             }\n    //             placeholder=\"Enter Title \"\n    //           />\n    //         </div>\n    //         <div className=\"form-group\">\n    //           <input\n    //             type=\"text\"\n    //             className=\"form-control\"\n    //             value={description}\n    //             onChange={(e) =>\n    //               setProduct({ ...product, description: e.target.value })\n    //             }\n    //             placeholder=\"Enter Description \"\n    //           />\n    //         </div>\n    //         <div className=\"form-group\">\n    //           <input\n    //             id=\"post-image\"\n    //             onChange={(e) =>\n    //               setProduct({ ...product, image: e.target.files[0] })\n    //             }\n    //             name=\"image\"\n    //             type=\"file\"\n    //           />\n    //           <img src={image} height=\"50px\" />\n    //         </div>\n    //         <div className=\"form-group\">\n    //           <select\n    //             class=\"selectpicker\"\n    //             name=\"maintitle\"\n    //             data-live-search=\"true\"\n    //             onChange={selectHandler}\n    //           >\n    //             {articles?.map((art) => (\n    //               <option value={art.id}>{art.title}</option>\n    //             ))}\n    //           </select>\n    //         </div>\n    //         <div className=\"form-group\">\n    //           <input\n    //             type=\"text\"\n    //             className=\"form-control\"\n    //             value={available_on}\n    //             onChange={(e) =>\n    //               setProduct({ ...product, available_on: e.target.value })\n    //             }\n    //             placeholder=\"Store name\"\n    //           />\n    //         </div>\n    //         <button className=\"btn btn-danger\" type=\"submit\">\n    //           Submit\n    //         </button>\n    //       </form>\n    //     </div>\n    //   </div>\n    // </>\n    _jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"exampleForm.ControlInput1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"The Wolf WatchMan\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.File, {\n          id: \"exampleFormControlFile1\",\n          label: \"Upload Image\",\n          onChange: e => setImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"exampleForm.ControlTextarea1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        class: \"selectpicker\",\n        name: \"maintitle\",\n        \"data-live-search\": \"true\",\n        onChange: selectHandler,\n        children: articleList.map(art => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: art.id,\n          children: art.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"exampleForm.ControlInput1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Avaliable On\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Bonish Store\",\n          value: available_on,\n          onChange: e => setAvailable_on(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-dark\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(SubArticleEdit, \"zdCncYVWq8KxfKDdO6uBR4pNO+k=\", false, function () {\n  return [useHistory, useParams, useDispatch, useSelector];\n});\n\n_c = SubArticleEdit;\nexport default SubArticleEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubArticleEdit\");","map":{"version":3,"sources":["/home/erik/Desktop/final/react-blog/src/screens/subarticleEdit-screen.js"],"names":["React","useState","useEffect","useHistory","useParams","useDispatch","createSubArticle","listSubArticles","listSubArticlesDetails","Form","Button","useSelector","listArticles","FormData","SubArticleEdit","history","slug","dispatch","articles","state","articlesList","product","setProduct","title","description","image","available_on","maintitle","selectHandler","e","selected","selectedOption","target","selectedOptions","i","length","push","value","console","log","final","map","Number","name","handleSubmit","preventDefault","formData","append","pair","entries","setTitle","setImage","files","setDescription","articleList","art","id","setAvailable_on"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  createSubArticle,\n  listSubArticles,\n  listSubArticlesDetails,\n} from \"../actions/subarticles-actions\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { listArticles } from \"../actions/articles-action\";\nimport FormData from \"form-data\";\n\nconst SubArticleEdit = () => {\n  let history = useHistory();\n  const { slug } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listArticles());\n    dispatch(listSubArticlesDetails(slug));\n  }, [dispatch]);\n  const { articles } = useSelector((state) => state?.articlesList);\n  // if (slug) {\n  //   const { subarticle, loading } = useSelector(\n  //     (state) => state.subarticlesDetails\n  //   );\n  // }\n\n  const [product, setProduct] = useState({\n    title: \"\",\n    description: \"\",\n    image: \"\",\n    available_on: \"\",\n    maintitle: [],\n  });\n  const { title, description, image, available_on, maintitle } = product;\n\n  // useEffect(() => {\n  //   if (subarticle) {\n  //     setProduct(subarticle);\n  //   }\n  // }, [subarticle]);\n  // const [title, setTitle] = useState(\"\");\n  // const [description, setDescription] = useState(\"\");\n  // const [image, setImage] = useState(\"\");\n  // const [available_on, setAvailable_on] = useState(\"\");\n  // const [maintitle, setMainTitle] = useState({\n  //   maintitle: [],\n  // });\n\n  // const selectHandler = (e) => {\n  //   const selected = [];\n  //   let selectedOption = e.target.selectedOptions;\n\n  //   for (let i = 0; i < selectedOption.length; i++) {\n  //     selected.push(selectedOption[i].value);\n  //   }\n  //   console.log(\"aaaaaaaaaaaaaaaa\", selected);\n  //   const final = selected.map(Number);\n\n  //   setMainTitle({ ...maintitle, [e.target.name]: selected });\n  //   console.log(\"!!!!!!!!!!\", selected);\n  // };\n\n  const selectHandler = (e) => {\n    const selected = [];\n    let selectedOption = e.target.selectedOptions;\n\n    for (let i = 0; i < selectedOption.length; i++) {\n      selected.push(selectedOption[i].value);\n    }\n    console.log(\"aaaaaaaaaaaaaaaa\", selected);\n    const final = selected.map(Number);\n\n    setProduct({ ...maintitle, [e.target.name]: selected });\n    console.log(\"!!!!!!!!!!\", selected);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"#######\");\n    let formData = new FormData();\n    console.log(\"#############\");\n    formData.append(\"title\", title);\n    formData.append(\"image\", image);\n    formData.append(\"description\", description);\n    formData.append(\"available_on\", available_on);\n    formData.append(\"maintitle\", maintitle.maintitle);\n    for (let pair of formData.entries()) {\n      console.log(pair[0] + \", \" + pair[1]);\n    }\n    // if (slug) {\n    //   dispatch(updateArticles(slug, formData));\n    // } else {\n    //   dispatch(createArticle(formData));\n    // }\n    dispatch(createSubArticle(formData));\n    history.push(\"/\");\n  };\n  return (\n    // <>\n    //   <div className=\"card border-0 shadow\">\n    //     <div className=\"card-header\">Add Contact</div>\n    //     <div className=\"card-body\">\n    //       <form encType=\"multipart/form-data\" onSubmit={(e) => handleSubmit(e)}>\n    //         <div className=\"form-group\">\n    //           <input\n    //             type=\"text\"\n    //             className=\"form-control\"\n    //             value={title}\n    //             onChange={(e) =>\n    //               setProduct({ ...product, title: e.target.value })\n    //             }\n    //             placeholder=\"Enter Title \"\n    //           />\n    //         </div>\n    //         <div className=\"form-group\">\n    //           <input\n    //             type=\"text\"\n    //             className=\"form-control\"\n    //             value={description}\n    //             onChange={(e) =>\n    //               setProduct({ ...product, description: e.target.value })\n    //             }\n    //             placeholder=\"Enter Description \"\n    //           />\n    //         </div>\n    //         <div className=\"form-group\">\n    //           <input\n    //             id=\"post-image\"\n    //             onChange={(e) =>\n    //               setProduct({ ...product, image: e.target.files[0] })\n    //             }\n    //             name=\"image\"\n    //             type=\"file\"\n    //           />\n    //           <img src={image} height=\"50px\" />\n    //         </div>\n    //         <div className=\"form-group\">\n    //           <select\n    //             class=\"selectpicker\"\n    //             name=\"maintitle\"\n    //             data-live-search=\"true\"\n    //             onChange={selectHandler}\n    //           >\n    //             {articles?.map((art) => (\n    //               <option value={art.id}>{art.title}</option>\n    //             ))}\n    //           </select>\n    //         </div>\n    //         <div className=\"form-group\">\n    //           <input\n    //             type=\"text\"\n    //             className=\"form-control\"\n    //             value={available_on}\n    //             onChange={(e) =>\n    //               setProduct({ ...product, available_on: e.target.value })\n    //             }\n    //             placeholder=\"Store name\"\n    //           />\n    //         </div>\n    //         <button className=\"btn btn-danger\" type=\"submit\">\n    //           Submit\n    //         </button>\n    //       </form>\n    //     </div>\n    //   </div>\n    // </>\n    <Form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>Title</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"The Wolf WatchMan\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.File\n          id=\"exampleFormControlFile1\"\n          label=\"Upload Image\"\n          onChange={(e) => setImage(e.target.files[0])}\n        />\n      </Form.Group>\n      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={3}\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n      </Form.Group>\n\n      <select\n        class=\"selectpicker\"\n        name=\"maintitle\"\n        data-live-search=\"true\"\n        onChange={selectHandler}\n      >\n        {articleList.map((art) => (\n          <option value={art.id}>{art.title}</option>\n        ))}\n      </select>\n\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>Avaliable On</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Bonish Store\"\n          value={available_on}\n          onChange={(e) => setAvailable_on(e.target.value)}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Button variant=\"outline-dark\" type=\"submit\">\n          Submit\n        </Button>\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default SubArticleEdit;\n"]},"metadata":{},"sourceType":"module"}